"use client";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from "three";
import { Canvas, useFrame } from "@react-three/fiber";
import React, { useRef, useState } from "react";
import { useGLTF, Environment, Stage } from "@react-three/drei";

export function Model(props) {
  const meshRef = useRef();
  const { nodes, materials } = useGLTF("/Coffee.glb");

  useFrame((state, delta) => (meshRef.current.rotation.y += delta));
  return (
    <group {...props} dispose={null} ref={meshRef}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["Node-Mesh"].geometry}
        material={materials.lambert3SG}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["Node-Mesh_1"].geometry}
        material={materials.lambert2SG}
      />
    </group>
  );
}

useGLTF.preload("/Coffee.glb");

export default function Coffee() {
  return (
    <Canvas
      camera={{
        rotation: [0, 0, 0],
        position: [0, 6, 10],
        lookAt: [0, 0, 0],
        zoom: [0.9],
      }}
    >
      <Stage environment={"sunset"}>
        <Model position={[0, 0, 0]} rotation={[0, 0, 0]} />
      </Stage>
    </Canvas>
  );
}
